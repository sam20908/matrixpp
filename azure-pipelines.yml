name: CI

jobs:
  - job: FormatValidation
    displayName: Format Validation
    pool:
      vmImage: ubuntu-latest

    steps:
      - checkout: self

      - script: |
          git clone https://github.com/Sarcasm/run-clang-format
        displayName: Clone run-clang-format

      - script: python ./run-clang-format/run-clang-format.py -r include external/tests external/include --style file --clang-format-executable=clang-format-12
        displayName: Validate

  - job: CodeCoverage
    displayName: Code Coverage

    pool:
      vmImage: ubuntu-latest

    steps:
      - checkout: self

      - script: |
          pip3 install lit==12.0.0 --no-warn-script-location
          echo '##vso[task.prependpath]$(HOME)/.local/bin'
        displayName: Install Python LLVM Lit

      - script: |
          sudo apt-get update
          sudo apt-get install gcovr
        displayName: Install GCC Gcovr

      - script: |
          cmake -DMPP_BUILD_TESTS=TRUE -DMPP_CODE_COVERAGE=TRUE -DCMAKE_CXX_COMPILER=/usr/bin/g++-10 -DCMAKE_BUILD_TYPE=Debug -B build
          cmake --build build --target mpp_code_coverage --config Debug
        displayName: Configure and Build Code Coverage

      - task: PublishCodeCoverageResults@1
        inputs:
          codeCoverageTool: cobertura
          summaryFileLocation: build/mpp_code_coverage.xml
          pathToSources: $(Build.SourcesDirectory)
        displayName: Publish Code Coverage

  - job: UbuntuGCC
    displayName: Ubuntu GCC 10

    pool:
      vmImage: ubuntu-latest

    steps:
      - checkout: self

      - script: |
          pip3 install lit==12.0.0 --no-warn-script-location
          echo '##vso[task.prependpath]$(HOME)/.local/bin'
        displayName: Install Python LLVM Lit

      - script: |
          cmake -DMPP_BUILD_TESTS=TRUE -DCMAKE_CXX_COMPILER=/usr/bin/g++-10 -DCMAKE_BUILD_TYPE=Debug -B build
          cmake --build build --target tests --config Debug
        displayName: Configure and Build Tests

      - script: |
          cd build/bin/tests
          lit . --xunit-xml-output results.xml -v
        displayName: Run Tests

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: JUnit
          testResultsFiles: "**/results.xml"
        displayName: Publish Tests Results

  - job: UbuntuClang
    displayName: Ubuntu Clang 12

    pool:
      vmImage: ubuntu-latest

    steps:
      - checkout: self

      - script: |
          pip3 install lit==12.0.0 --no-warn-script-location
          echo '##vso[task.prependpath]$(HOME)/.local/bin'
        displayName: Install Python LLVM Lit

      - script: |
          cmake -DMPP_BUILD_TESTS=TRUE -DCMAKE_CXX_COMPILER=/usr/bin/clang++-12 -DCMAKE_BUILD_TYPE=Debug -B build
          cmake --build build --target tests --config Debug
        displayName: Configure and Build Tests

      - script: |
          cd build/bin/tests
          lit . --xunit-xml-output results.xml -v
        displayName: Run Tests

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: JUnit
          testResultsFiles: "**/results.xml"
        displayName: Publish Tests Results

  - job: WindowsMSVC
    displayName: Windows MSVC 19.28

    pool:
      vmImage: windows-latest

    steps:
      - checkout: self

      - script: |
          pip install lit==12.0.0 --no-warn-script-location
          echo '##vso[task.prependpath]$(HOME)/.local/bin'
        displayName: Install Python LLVM Lit

      - script: |
          call "%ProgramFiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"

          cmake -DMPP_BUILD_TESTS=TRUE -DCMAKE_CXX_COMPILER=cl -DCMAKE_BUILD_TYPE=Debug -B build
          cmake --build build --target tests --config Debug
        displayName: Configure and Build Tests

      - script: |
          cd build/bin/tests
          lit . --xunit-xml-output results.xml -v
        displayName: Run Tests

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: JUnit
          testResultsFiles: "**/results.xml"
        displayName: Publish Tests Results

  - job: WindowsClang
    condition: false # @TODO: Remove this once VS comes with Clang 12
    displayName: Windows Clang 12

    pool:
      vmImage: windows-latest

    steps:
      - checkout: self

      - script: |
          pip install lit==12.0.0 --no-warn-script-location
          echo '##vso[task.prependpath]$(HOME)/.local/bin'
        displayName: Install Python LLVM Lit

      - script: |
          call "%ProgramFiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"

          cmake -DMPP_BUILD_TESTS=TRUE -DCMAKE_CXX_COMPILER=clang-cl -DCMAKE_BUILD_TYPE=Debug -G Ninja -B build
          cmake --build build --target tests --config Debug
        displayName: Configure and Build Tests

      - script: |
          cd build/bin/tests
          lit . --xunit-xml-output results.xml -v
        displayName: Run Tests

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: JUnit
          testResultsFiles: "**/results.xml"
        displayName: Publish Tests Results
